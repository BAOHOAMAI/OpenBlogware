const o=`{% block werkl_cms_element_newest_listing_config %} <div class="werkl-cms-el-config-newest-listing"> {% block werkl_cms_element_newest_listing_config_itemCount_field %} <mt-number-field numberType="int" :step="1" :min="1" :max="null" v-model="element.config.itemCount.value" :digits="2" :allowEmpty="false" :label="$tc('werkl-blog.elements.newestListing.config.itemCount')" ></mt-number-field> {% endblock %} {% block werkl_cms_element_newest_listing_config_offsetCount_field %} <mt-number-field numberType="int" :step="1" :min="0" :max="null" v-model="element.config.offsetCount.value" :digits="2" :allowEmpty="false" :label="$tc('werkl-blog.elements.newestListing.config.offsetCount')" ></mt-number-field> {% endblock %} {% block werkl_cms_element_blog_listing_config_show_type %} <mt-select :label="$tc('werkl-blog.elements.newestListing.config.showType.label')" v-model="element.config.showType.value" :options="[{" label":"{{ $tc('werkl-blog.elements.newestListing.config.showType.options.all') }}","value":"all"},{"label":"{{ $tc('werkl-blog.elements.newestListing.config.showType.options.select') }}","value":"select"}]" ></mt-select> {% endblock %} {% block werkl_cms_element_blog_listing_config_select_categories %} <werkl-blog-category-tree-field v-if="element.config.showType.value !== 'all' && selectedCategories" v-model:value="selectedCategories" :label="$tc('werkl-blog.elements.newestListing.config.blogCategories.label')" :categoriesCollection="selectedCategories" class="sw-product-detail__select-category" :placeholder="$tc('werkl-blog.elements.newestListing.config.blogCategories.placeholder')" ></werkl-blog-category-tree-field> {% endblock %} </div> {% endblock %}`,{Mixin:i}=Shopware,{EntityCollection:s,Criteria:t}=Shopware.Data,n={template:o,inject:["repositoryFactory"],mixins:[i.getByName("cms-element")],data(){return{categories:[],selectedCategories:null}},computed:{blogCategoryRepository(){return this.repositoryFactory.create("werkl_blog_category")},blogListingSelectContext(){const e=Object.assign({},Shopware.Context.api);return e.inheritance=!0,e},blogCategoriesConfigValue(){return this.element.config.blogCategories.value}},watch:{selectedCategories:{handler(e){this.element.config.blogCategories.value=e.getIds(),this.$set(this.element.data,"blogCategories",e),this.$emit("element-update",this.element)}}},created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("blog-newest-listing"),await this.getSelectedCategories()},getSelectedCategories(){if(Shopware.Utils.types.isEmpty(this.blogCategoriesConfigValue))this.selectedCategories=new s(this.blogCategoryRepository.route,this.blogCategoryRepository.schema.entity,Shopware.Context.api,new t);else{const e=new t;e.setIds(this.blogCategoriesConfigValue),this.blogCategoryRepository.search(e,Shopware.Context.api).then(l=>{this.selectedCategories=l})}}}};export{n as default};
//# sourceMappingURL=index-rzKg8dy6.js.map
